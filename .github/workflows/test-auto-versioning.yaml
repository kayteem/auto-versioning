name: Auto Versioning Test Suite

on:
  push:
    paths:
      - 'action.yaml'

jobs:
  test_case_1:
    name: Test action on a fresh repo with no existing tags
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo and remove all tags
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Remove all tags
        run: |
          # Delete all local tags
          git fetch --tags
          git tag -l | xargs git tag -d
          # Fetch the list of remote tags and then push a command to delete each of them on the remote repository
          git push origin $(git ls-remote --tags origin | awk '{print ":" $2}')

      - name: Increment Version
        id: increment_version
        uses: ./
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve new versions
        run: |
          INCREMENTED_BUILD_VERSION=${{ steps.increment_version.outputs.build-version }}

      - name: Fetch all tags again
        run: git fetch --tags

      - name: Check if new tag is '1'
        run: |
          test ${INCREMENTED_BUILD_VERSION} = '1'
          test $(git tag --points-at HEAD) = '1'


  test_case_2:
    name: Test action on a repo with an initial tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: test_case_1
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Remove all tags
        run: |
          # Delete all local tags
          git fetch --tags
          git tag -l | xargs git tag -d
          # Fetch the list of remote tags and then push a command to delete each of them on the remote repository
          git push origin $(git ls-remote --tags origin | awk '{print ":" $2}')

      - name: Push test tag '5'
        run: |
          git tag '5'
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} --tags

      - name: Increment Version
        id: increment_version
        uses: ./
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve new versions
        run: |
          INCREMENTED_BUILD_VERSION=${{ steps.increment_version.outputs.build-version }}

      - name: Fetch all tags again
        run: git fetch --tags

      - name: Check if new tag is '6'
        run: |
          test ${INCREMENTED_BUILD_VERSION} = '6'
          test $(git tag --points-at HEAD) = '6'
